{"version":3,"sources":["pages/NetworkRap.jsx","components/Navbar.jsx","pages/Communities.jsx","pages/Insights.jsx","pages/Build.jsx","App.js","serviceWorker.js","index.js","draw.svg"],"names":["Modal","ArtistName","ArtistCollabs","filteredCollabs","setName","name","toggleModal","className","onClick","Fragment","type","placeholder","value","onChange","e","target","map","el","NetworkRap","props","useState","d3Container","useRef","data","dataJ","setAName","ratio","setRatio","modal","setCollabs","setFilteredCollabs","useEffect","console","log","window","innerWidth","current","links","d","Object","create","nodes","simulation","d3","force","id","distanceMin","strength","svg","link","append","attr","selectAll","join","Math","sqrt","weight","node","enter","circle","style","scale","group","color","on","this","transition","duration","collabs","event","clientX","clientY","call","active","alphaTarget","restart","fx","x","fy","y","drag","source","newArray","forEach","artist","includes","push","position","width","height","viewBox","ref","Navbar","to","full_data","data_0","data_1","data_2","data_3","data_4","data_5","data_6","data_7","data_8","data_9","colorsCom","ArtistList","displayedData","ArtistStats","toFixed","Communities","view","toggleView","setDisplayed","remove","community","exit","Insigths","title","src","Build","href","App","path","exactPath","draw","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c2bc344d.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport dataJ from \"../data/rapGraph.json\";\n\nconst height = 2000;\nconst width = 2000;\n/* Component */\nconst NetworkRap = props => {\n  const [name, setName] = useState(\"\");\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting Name ${name}`);\n  };\n  /* The useRef Hook creates a variable that \"holds on\" to a value across rendering\n       passes. In this case it will hold our component's SVG DOM element. It's\n       initialized null and React will assign it later (see the return statement) */\n  const d3Container = useRef(null);\n  const data = dataJ;\n\n  const [ArtistName, setAName] = useState(\"\");\n  const [ratio, setRatio] = useState(1);\n  const [modal, toggleModal] = useState(true);\n\n  const [ArtistCollabs, setCollabs] = useState([]);\n\n  const [filteredCollabs, setFilteredCollabs] = useState([]);\n\n  const color = () => {\n    const scale = d3.scaleOrdinal(d3.schemeCategory10);\n    return d => scale(d.group);\n  };\n\n  const drag = simulation => {\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  };\n\n  useEffect(() => {\n    console.log(\"ha\");\n    if (window.innerWidth > 1100) {\n      setRatio(1.5);\n    }\n  }, [window.innerWidth]);\n\n  /* The useEffect Hook is for running side effects outside of React,\n       for instance inserting elements into the DOM using D3 */\n  useEffect(\n    () => {\n      if (data && d3Container.current) {\n        console.log(data);\n        const links = data.links.map(d => Object.create(d));\n        const nodes = data.nodes.map(d => Object.create(d));\n\n        const simulation = d3\n          .forceSimulation(nodes)\n          .force(\"link\", d3.forceLink(links).id(d => d.id))\n          .force(\"charge\", d3.forceManyBody())\n          .force(\"center\", d3.forceCenter(width / 3, (1.6 * height) / 3))\n          .force(\"distanceMax\", d3.forceManyBody().distanceMin([50]))\n          .force(\"strength\", d3.forceManyBody().strength([10]));\n\n        const svg = d3.select(d3Container.current);\n\n        const link = svg\n          .append(\"g\")\n          .attr(\"stroke\", \"#999\")\n          .attr(\"stroke-opacity\", 0.2)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke-width\", d => Math.sqrt(d.weight));\n\n        var node = svg\n          .selectAll(\".node\")\n          .data(nodes)\n          .enter()\n          .append(\"g\");\n\n        var circle = node\n          .append(\"circle\")\n          .attr(\"class\", \"node\")\n          .attr(\"id\", function(d) {\n            return d.id;\n          })\n          .attr(\"r\", function(d) {\n            return Math.sqrt(d.weight) * 2;\n          })\n          .style(\"fill\", function(d) {\n            return color(d.group);\n          })\n          .on(\"mouseover\", function(d) {\n            d3.select(this)\n              .transition()\n              .duration(550)\n              .attr(\"r\", 30)\n              .style(\"fill\", \"#1db954\");\n            // d3.select(labels[\"_groups\"][0][d.index]).style(\n            //   \"visibility\",\n            //   \"visible\"\n            // );\n          })\n          .on(\"click\", function(d) {\n            d3.select(this)\n              .transition()\n              .duration(550)\n              .attr(\"r\", 30)\n              .style(\"fill\", \"#03a9f4\");\n            // d3.select(labels[\"_groups\"][0][d.index]).style(\n            //   \"visibility\",\n            //   \"visible\"\n            // );\n            toggleModal(true);\n            setAName(d.id);\n            setCollabs(d.collabs);\n          })\n          .on(\"mouseout\", function(d) {\n            d3.select(this)\n              .transition()\n              .duration(550)\n              .attr(\"r\", Math.sqrt(d.weight) * 2)\n              .style(\"fill\", \"black\");\n            // d3.select(labels[\"_groups\"][0][d.index]).style(\n            //   \"visibility\",\n            //   \"hidden\"\n            // ); //})\n\n            var e = window.event;\n            let x = e.clientX; // Get the horizontal coordinate\n            let y = e.clientY;\n            //setAName(\"\");\n            //setCollabs([]);\n          })\n          .call(drag(simulation));\n\n        // var labels = node\n        //   .append(\"svg:text\")\n        //   .text(function(d) {\n        //     return d.id;\n        //   })\n        //   .style(\"text-anchor\", \"middle\")\n        //   .style(\"fill\", \"blue\")\n        //   .style(\"font-family\", \"Arial\")\n        //   .style(\"font-size\", 30)\n        //   .style(\"visibility\", \"hidden\");\n\n        // node.append(\"title\").text(d => d.id);\n\n        simulation.on(\"tick\", () => {\n          // labels\n          //   .attr(\"x\", function(d) {\n          //     return d.x;\n          //   })\n          //   .attr(\"y\", function(d) {\n          //     return d.y - 15;\n          //   });\n          link\n            .attr(\"x1\", d => d.source.x)\n            .attr(\"y1\", d => d.source.y)\n            .attr(\"x2\", d => d.target.x)\n            .attr(\"y2\", d => d.target.y);\n\n          circle\n            .attr(\"cx\", function(d) {\n              return d.x;\n            })\n            .attr(\"cy\", function(d) {\n              return d.y;\n            });\n\n          node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n        });\n\n        //update.attr(\"x\", (d, i) => i * 40).text(d => d);\n\n        // // Remove old D3 elements\n        //update.exit().remove();\n\n        // ////\n        // ///////\n        // ///////\n        // console.log(data);\n        // const svg = d3.select(d3Container.current);\n\n        // // Bind D3 data\n        // const update = svg\n        //   .append(\"g\")\n        //   .selectAll(\"text\")\n        //   .data(data);\n\n        // // Enter new D3 elements\n        // update\n        //   .enter()\n        //   .append(\"text\")\n        //   .attr(\"x\", (d, i) => i * 25)\n        //   .attr(\"y\", 40)\n        //   .style(\"font-size\", 24)\n        //   .text(d => d);\n\n        // // Update existing D3 elements\n        // update.attr(\"x\", (d, i) => i * 40).text(d => d);\n\n        // // Remove old D3 elements\n      }\n    },\n\n    /*\n            useEffect has a dependency array (below). It's a list of dependency\n            variables for this useEffect block. The block will run after mount\n            and whenever any of these variables change. We still have to check\n            if the variables are valid, but we do not have to compare old props\n            to next props to decide whether to rerender.\n        */\n    [data]\n  );\n\n  useEffect(() => {\n    let newArray = [];\n\n    ArtistCollabs.forEach(artist => {\n      if (artist[0].includes(name)) {\n        newArray.push(artist);\n      }\n    });\n\n    setFilteredCollabs(newArray);\n  }, [ArtistCollabs, name]);\n\n  return (\n    <React.Fragment>\n      <div className=\"col-1-6\" style={{ position: \"relative\" }}>\n        <svg\n          style={{ position: \"absolute\" }}\n          className=\"d3-component\"\n          width={800 * ratio}\n          height={600 * ratio}\n          viewBox=\"0 0 2000 2300\"\n          ref={d3Container}\n        />\n\n        {modal ? (\n          <Modal\n            ArtistName={ArtistName}\n            ArtistCollabs={ArtistCollabs}\n            filteredCollabs={filteredCollabs}\n            setName={setName}\n            name={name}\n            toggleModal={toggleModal}\n          />\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst Modal = ({\n  ArtistName,\n  ArtistCollabs,\n  filteredCollabs,\n  setName,\n  name,\n  toggleModal\n}) => {\n  return (\n    <div className=\"collabs-div\">\n      <button className=\"close-modal\" onClick={() => toggleModal(false)}>\n        Close\n      </button>\n      {ArtistName ? (\n        <React.Fragment>\n          <div className=\"artist-name\">{ArtistName}</div>\n          {ArtistCollabs ? (\n            <div className=\"artist-collab-div-wrap\">\n              <input\n                type=\"text\"\n                placeholder=\"Search collaborator\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n              <br />\n              <div className=\"artist-collab-div\">\n                {filteredCollabs.map(el => (\n                  <span className=\"artist-collab\">\n                    {el[0]}, <i>{el[1]} collabs.</i>\n                  </span>\n                ))}\n              </div>\n            </div>\n          ) : null}\n          <div className=\"info\">💡 Click on another node to change artist</div>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <div className=\"info\">💡 Click on a node to look-up an artist</div>\n          <div className=\"info\">⚠️ Works best on a computer</div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default NetworkRap;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n    <div className=\"sp-nav\">\n      <h3>Spotify Network</h3>\n      <Link to=\"/\">\n        <h5>Home</h5>\n      </Link>\n      <Link to=\"network\">\n        <h5>Network</h5>\n      </Link>\n      <Link to=\"build\">\n        <h5>Building the network</h5>\n      </Link>\n      <Link to=\"insigths\">\n        <h5>Insigths</h5>\n      </Link>\n      <Link to=\"communities\">\n        <h5>Communities</h5>\n      </Link>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport data_0 from \"../data/community_graphs/community_graph_0\";\nimport data_1 from \"../data/community_graphs/community_graph_1\";\nimport data_2 from \"../data/community_graphs/community_graph_2\";\nimport data_3 from \"../data/community_graphs/community_graph_3\";\nimport data_4 from \"../data/community_graphs/community_graph_4\";\nimport data_5 from \"../data/community_graphs/community_graph_5\";\nimport data_6 from \"../data/community_graphs/community_graph_6\";\nimport data_7 from \"../data/community_graphs/community_graph_7\";\nimport data_8 from \"../data/community_graphs/community_graph_8\";\nimport data_9 from \"../data/community_graphs/community_graph_9\";\n\nconst full_data = [];\n\nfull_data.push(data_0);\nfull_data.push(data_1);\nfull_data.push(data_2);\nfull_data.push(data_3);\nfull_data.push(data_4);\nfull_data.push(data_5);\nfull_data.push(data_6);\nfull_data.push(data_7);\nfull_data.push(data_8);\nfull_data.push(data_9);\n\nconst height = 2000;\nconst width = 2000;\n\nconst colorsCom = [\n  \"#c62828\",\n  \"#8e24aa\",\n  \"#2196f3\",\n  \"#304ffe\",\n  \"#4dd0e1\",\n  \"#1de9b6\",\n  \"#00e676\",\n  \"#fbc02d\",\n  \"#ff5722\",\n  \"#2e7d32\"\n];\n/* Component */\nconst Communities = props => {\n  const [name, setName] = useState(\"\");\n  const [view, toggleView] = useState(false);\n\n  const [displayedData, setDisplayed] = useState(0);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting Name ${name}`);\n  };\n  /* The useRef Hook creates a variable that \"holds on\" to a value across rendering\n       passes. In this case it will hold our component's SVG DOM element. It's\n       initialized null and React will assign it later (see the return statement) */\n  const d3Container = useRef(null);\n  const data = full_data[displayedData];\n\n  const [ArtistName, setAName] = useState(\"\");\n\n  const [ArtistCollabs, setCollabs] = useState([]);\n\n  const [filteredCollabs, setFilteredCollabs] = useState([]);\n\n  const color = () => {\n    const scale = d3.scaleOrdinal(d3.schemeCategory10);\n    return d => scale(d.group);\n  };\n\n  const drag = simulation => {\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  };\n\n  /* The useEffect Hook is for running side effects outside of React,\n       for instance inserting elements into the DOM using D3 */\n  useEffect(\n    () => {\n      if (data && d3Container.current) {\n        const links = data.links.map(d => Object.create(d));\n        const nodes = data.nodes.map(d => Object.create(d));\n\n        const simulation = d3\n          .forceSimulation(nodes)\n          .force(\"link\", d3.forceLink(links).id(d => d.id))\n          .force(\"charge\", d3.forceManyBody())\n          .force(\"center\", d3.forceCenter(width / 2, height / 2))\n          .force(\"distanceMax\", d3.forceManyBody().distanceMin([50]))\n          .force(\"strength\", d3.forceManyBody().strength([10]));\n\n        const svg = d3.select(d3Container.current);\n        svg.selectAll(\"*\").remove();\n\n        const link = svg\n          .append(\"g\")\n          .attr(\"stroke\", \"#999\")\n          .attr(\"stroke-opacity\", 0.2)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke-width\", d => Math.sqrt(d.weight));\n\n        var node = svg\n          .selectAll(\".node\")\n          .data(nodes)\n          .enter()\n          .append(\"g\");\n\n        var circle = node\n          .append(\"circle\")\n          .attr(\"class\", \"node\")\n          .attr(\"id\", function(d) {\n            return d.id;\n          })\n          .attr(\"r\", function(d) {\n            return Math.sqrt(d.weight) * 5;\n          })\n          .style(\"fill\", function(d) {\n            return colorsCom[d.community];\n          })\n          .on(\"mouseover\", function(d) {\n            d3.select(this)\n              .transition()\n              .duration(550)\n              .attr(\"r\", 30)\n              .style(\"fill\", \"#1db954\");\n            // d3.select(labels[\"_groups\"][0][d.index]).style(\n            //   \"visibility\",\n            //   \"visible\"\n            // );\n\n            setAName(d.id);\n            setCollabs(d.collabs);\n          })\n          .on(\"mouseout\", function(d) {\n            d3.select(this)\n              .transition()\n              .duration(550)\n              .attr(\"r\", Math.sqrt(d.weight) * 2)\n              .style(\"fill\", colorsCom[d.community]);\n            // d3.select(labels[\"_groups\"][0][d.index]).style(\n            //   \"visibility\",\n            //   \"hidden\"\n            // ); //})\n\n            var e = window.event;\n            let x = e.clientX; // Get the horizontal coordinate\n            let y = e.clientY;\n            //setAName(\"\");\n            //setCollabs([]);\n          })\n          .call(drag(simulation));\n\n        simulation.on(\"tick\", () => {\n          link\n            .attr(\"x1\", d => d.source.x)\n            .attr(\"y1\", d => d.source.y)\n            .attr(\"x2\", d => d.target.x)\n            .attr(\"y2\", d => d.target.y);\n\n          circle\n            .attr(\"cx\", function(d) {\n              return d.x;\n            })\n            .attr(\"cy\", function(d) {\n              return d.y;\n            });\n\n          node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n        });\n\n        //update.attr(\"x\", (d, i) => i * 40).text(d => d);\n\n        // // Remove old D3 elements\n        node.exit().remove();\n\n        // ////\n        // ///////\n        // ///////\n        // console.log(data);\n        // const svg = d3.select(d3Container.current);\n\n        // // Bind D3 data\n        // const update = svg\n        //   .append(\"g\")\n        //   .selectAll(\"text\")\n        //   .data(data);\n\n        // // Enter new D3 elements\n        // update\n        //   .enter()\n        //   .append(\"text\")\n        //   .attr(\"x\", (d, i) => i * 25)\n        //   .attr(\"y\", 40)\n        //   .style(\"font-size\", 24)\n        //   .text(d => d);\n\n        // // Update existing D3 elements\n        // update.attr(\"x\", (d, i) => i * 40).text(d => d);\n\n        // // Remove old D3 elements\n      }\n    },\n\n    /*\n            useEffect has a dependency array (below). It's a list of dependency\n            variables for this useEffect block. The block will run after mount\n            and whenever any of these variables change. We still have to check\n            if the variables are valid, but we do not have to compare old props\n            to next props to decide whether to rerender.\n        */\n    [data, displayedData]\n  );\n\n  useEffect(() => {\n    let newArray = [];\n\n    ArtistCollabs.forEach(artist => {\n      if (artist[0].includes(name)) {\n        newArray.push(artist);\n      }\n    });\n\n    setFilteredCollabs(newArray);\n  }, [ArtistCollabs, name]);\n\n  useEffect(() => {}, [displayedData]);\n\n  return (\n    <React.Fragment>\n      <div className=\"network-com col-1-3\">\n        <svg\n          className=\"d3-component \"\n          width={300}\n          height={300}\n          viewBox=\"0 0 2000 2000\"\n          ref={d3Container}\n        />\n      </div>\n\n      <div className=\"col-3-6 \">\n        <div className=\"selection-comm\">\n          <h5 style={{ \"margin-bottom\": 3 }}>Select a community number:</h5>{\" \"}\n          <button\n            className={\"change_btn \" + (displayedData == 0 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(0)}\n          >\n            0\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 1 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(1)}\n          >\n            1\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 2 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(2)}\n          >\n            2\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 3 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(3)}\n          >\n            3\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 4 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(4)}\n          >\n            4\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 5 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(5)}\n          >\n            5\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 6 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(6)}\n          >\n            6\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 7 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(7)}\n          >\n            7\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 8 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(8)}\n          >\n            8\n          </button>\n          <button\n            className={\"change_btn \" + (displayedData === 9 ? \"active-c\" : \"\")}\n            onClick={() => setDisplayed(9)}\n          >\n            9\n          </button>\n        </div>\n        <br />\n        <div className=\"community-content\">\n          <div className=\"nav-communities\">\n            <button\n              onClick={() => toggleView(false)}\n              className={view ? \"btn-active\" : \"\"}\n            >\n              List\n            </button>\n            <button\n              className={view ? \"\" : \"btn-active\"}\n              onClick={() => toggleView(true)}\n            >\n              Text Analysis\n            </button>\n          </div>\n\n          {view ? (\n            <ArtistStats displayedData={displayedData} />\n          ) : (\n            <ArtistList displayedData={displayedData} full_data={full_data} />\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst ArtistList = ({ displayedData, full_data }) => {\n  return (\n    <React.Fragment>\n      <h5 style={{ \"margin-top\": 3, \"margin-bottom\": 3 }}>\n        Artists in the community n°{displayedData}\n      </h5>\n      <div>\n        <div className=\"artist-collab-div\">\n          {full_data[displayedData].nodes.map(node => {\n            if (node.weight) {\n              return (\n                <span className=\"artist-collab\">\n                  {node.id} <span className=\"nb-icon\">{node.weight}</span>\n                </span>\n              );\n            }\n            return null;\n          })}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst ArtistStats = ({ displayedData }) => {\n  const sentimentScore = {\n    \"0\": 4.258,\n    \"1\": 4.314,\n    \"2\": 4.307,\n    \"3\": 4.305,\n    \"4\": 4.088,\n    \"5\": 4.098,\n    \"6\": 4.969,\n    \"7\": 4.5,\n    \"8\": 4.589,\n    \"9\": \"N/A\"\n  };\n  return (\n    <React.Fragment>\n      <h3>Statistics</h3>\n      <div>\n        <span className=\"kpi\">\n          Happiness Score :{\" \"}\n          <b>{(sentimentScore[displayedData] * 10).toFixed(2)} % </b>\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Communities;\n","import React from \"react\";\n\nconst Insigths = () => {\n  return (\n    <React.Fragment>\n      <iframe\n        title=\"static_html\"\n        className=\"pythonFrame col-1-6\"\n        src=\"LoadTracks_cleaned.html\"\n      ></iframe>\n    </React.Fragment>\n  );\n};\n\nexport default Insigths;\n","import React from \"react\";\n\nconst Build = () => {\n  return (\n    <React.Fragment>\n      <div className=\"col-1-4 padded\">\n        <h5>Spotify Data</h5>\n        <hr />\n        To build our network, we used the <b>Spotify API</b>. The first step was\n        retrieving a lot of us hip-hop artists names. We did so by looking for\n        around 20 US Rap playlists. From these playlists, we scrapped the name\n        of more than 900 artists.\n        <br />\n        <br />\n        Then, with this name list, we could retrieve each album from these\n        artists, and from these albums, each songs. We built a dataset on a JSON\n        file consisting of an object of artists, where each key is the name of\n        the artist and the value is the list of the song produced by the artist.\n        <br />\n        <br /> Then a song object contains many informations such as the artists\n        that collaborated on the song.\n      </div>\n      <div className=\"col-4-6 padded\">\n        <h5>Lyrics</h5> <hr />\n        Rap Genius\n      </div>\n      <div className=\"col-1-6 padded datalink\">\n        <h5>Download datasets</h5>\n        <hr />\n        <a href=\"rapGraph.json\">Artist dataset</a>\n        <a>Songs dataset</a>\n        <a>Network JSON</a>\n      </div>\n      <div className=\"col-1-6 padded \">\n        <h5>Notebook</h5>\n        <hr />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Build;\n","import React from \"react\";\nimport \"./css/main.scss\";\nimport NetworkRap from \"./pages/NetworkRap\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Communities from \"./pages/Communities\";\nimport Insigths from \"./pages/Insights\";\nimport draw from \"./draw.svg\";\nimport Build from \"./pages/Build\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"sp-grid\">\n          <Switch>\n            <Route path=\"/network\">\n              <NetworkRap />\n            </Route>\n\n            <Route path=\"/communities\">\n              <Communities />\n            </Route>\n\n            <Route path=\"/build\">\n              <Build />\n            </Route>\n\n            <Route path=\"/insigths\">\n              <Insigths />\n            </Route>\n            <Route exactPath=\"/\">\n              <div className=\"col-1-6\">\n                <div>Hi, we are Stéphane, Anelia and Atharva. </div>\n                <br />\n                <div>\n                  For the <b>Social Graphs & Interactions ©</b> course at{\" \"}\n                  <b>DTU</b>, we decided to build a network of U.S Hip-Hop\n                  artists, via the <b>Spotify</b> API.\n                </div>\n                <br />\n                <div>\n                  On our website, you can get a look at the Network, some useful\n                  insights about it, as well as text analysis between the\n                  communities of the network.\n                </div>\n                <br />\n                <div>\n                  <i>Enjoy your visit </i> 😄\n                </div>\n                <hr />\n                <div>\n                  <i>\n                    Stéphane Guichard (s192576), Anelia Pethrova (), Atharva\n                    Brath ()\n                  </i>\n                </div>\n                <img src={draw} />\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/draw.f5f82c90.svg\";"],"sourceRoot":""}